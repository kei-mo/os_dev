GAS LISTING src/asm/asm_func.s 			page 1


   1              	.arch i486
   2              	
   3              	.text
   4              	
   5              	.global io_hlt, io_cli, io_sti, io_stihlt
   6              	.global io_in8, io_in16, io_in32
   7              	.global io_out8, io_out16, io_out32
   8              	.global io_load_eflags, io_store_eflags
   9              	.global load_gdtr, load_idtr
  10              	.global load_cr0, store_cr0
  11              	.global asm_inthandler21, asm_inthandler2c, asm_inthandler27
  12              	.global memtest_sub
  13              	
  14              	.extern inthandler21, inthandler2c, inthandler27
  15              	
  16              	#void io_htl(void)
  17              	io_hlt:
  18 0000 F4       	    hlt
  19 0001 C3       	    ret
  20              	
  21              	#void io_cli(void)
  22              	io_cli:
  23 0002 FA       	    cli
  24 0003 C3       	    ret
  25              	
  26              	#void io_sti(void)
  27              	io_sti:
  28 0004 FB       	    sti
  29 0005 C3       	    ret
  30              	
  31              	#void io_stihlt(void)
  32              	io_stihlt:
  33 0006 FB       	    sti
  34 0007 F4       	    hlt
  35 0008 C3       	    ret
  36              	
  37              	#int io_in8(int port)
  38              	io_in8:
  39 0009 8B542404 	    movl 4(%esp), %edx
  40 000d B8000000 	    movl $0, %eax
  40      00
  41 0012 EC       	    inb %dx, %al
  42 0013 C3       	    ret
  43              	
  44              	#int io_in16(int port)
  45              	io_in16:
  46 0014 8B542404 	    movl 4(%esp), %edx
  47 0018 B8000000 	    movl $0, %eax
  47      00
  48 001d 66ED     	    inw %dx, %ax
  49 001f C3       	    ret
  50              	
  51              	#int io_in32(int port)
  52              	io_in32:
  53 0020 8B542404 	    movl 4(%esp), %edx
  54 0024 ED       	    inl %dx, %eax
  55 0025 C3       	    ret
GAS LISTING src/asm/asm_func.s 			page 2


  56              	
  57              	#void io_out8(int port, int data)
  58              	io_out8:
  59 0026 8B542404 	    movl 4(%esp), %edx
  60 002a 8A442408 	    movb 8(%esp), %al
  61 002e EE       	    outb %al, %dx
  62 002f C3       	    ret
  63              	
  64              	#void io_out16(int port, int data)
  65              	io_out16:
  66 0030 8B542404 	    movl 4(%esp), %edx
  67 0034 8B442408 	    movl 8(%esp), %eax
  68 0038 66EF     	    outw %ax, %dx
  69 003a C3       	    ret
  70              	
  71              	#void io_out32(int port, int data)
  72              	io_out32:
  73 003b 8B542404 	    movl 4(%esp), %edx
  74 003f 8B442408 	    movl 8(%esp), %eax
  75 0043 EF       	    outl %eax, %dx
  76 0044 C3       	    ret
  77              	
  78              	#int io_load_eflags(void)
  79              	io_load_eflags:
  80 0045 9C       	    pushf
  81 0046 58       	    pop %eax
  82 0047 C3       	    ret
  83              	
  84              	#int io_store_eflags(void)
  85              	io_store_eflags:
  86 0048 8B442404 	    movl 4(%esp), %eax
  87 004c 50       	    push %eax
  88 004d 9D       	    popf
  89 004e C3       	    ret
  90              	
  91              	#void load_gdtr(int limit, int addr)
  92              	load_gdtr:
  93 004f 668B4424 	    movw 4(%esp), %ax #limit
  93      04
  94 0054 66894424 	    movw %ax, 6(%esp)
  94      06
  95 0059 0F015424 	    lgdt 6(%esp)
  95      06
  96 005e C3       	    ret
  97              	
  98              	#void load_idtr(int limit, int addr)
  99              	load_idtr:
 100 005f 668B4424 	    movw 4(%esp), %ax #limit
 100      04
 101 0064 66894424 	    movw %ax, 6(%esp)
 101      06
 102 0069 0F015C24 	    lidt 6(%esp)
 102      06
 103 006e C3       	    ret
 104              	
 105              	#int io_load_cr0(void)
 106              	load_cr0:
GAS LISTING src/asm/asm_func.s 			page 3


 107 006f 0F20C0   	    movl %cr0, %eax
 108 0072 C3       	    ret
 109              	
 110              	#void io_store_cr0(int cr0)
 111              	store_cr0:
 112 0073 8B442404 	    movl 4(%esp), %eax
 113 0077 0F22C0   	    movl %eax, %cr0
 114 007a C3       	    ret
 115              	
 116              	
 117              	#void asm_inthandler21(void)
 118              	asm_inthandler21:
 119 007b 06       	    push %es
 120 007c 1E       	    push %ds
 121 007d 60       	    pusha
 122 007e 89E0     	    movl %esp, %eax
 123 0080 50       	    push %eax
 124 0081 668CD0   	    movw %ss, %ax
 125 0084 8ED8     	    movw %ax, %ds
 126 0086 8EC0     	    movw %ax, %es
 127 0088 E8FCFFFF 	    call inthandler21
 127      FF
 128 008d 58       	    pop %eax
 129 008e 61       	    popa
 130 008f 1F       	    pop %ds
 131 0090 07       	    pop %es
 132 0091 CF       	    iret
 133              	    #es, ds, ss„ÇíÂêå„ÅòÂÄ§„Å´ÊèÉ„Åà„Çã„ÅÆ„ÅØ„ÄÅ„ÄåCË®ÄË™û„Åß„ÅØ„Åì„Çå„Çâ„ÅåÂêå„Åò„Çª„Ç∞„É°„É≥„Éà„Ç
 134              	
 135              	#void asm_inthandler2c(void)
 136              	asm_inthandler2c:
 137 0092 06       	    push %es
 138 0093 1E       	    push %ds
 139 0094 60       	    pusha
 140 0095 89E0     	    mov %esp, %eax
 141 0097 50       	    push %eax
 142 0098 668CD0   	    mov %ss, %ax
 143 009b 8ED8     	    mov %ax, %ds
 144 009d 8EC0     	    mov %ax, %es
 145 009f E8FCFFFF 	    call inthandler2c
 145      FF
 146 00a4 58       	    pop %eax
 147 00a5 61       	    popa
 148 00a6 1F       	    pop %ds
 149 00a7 07       	    pop %es
 150 00a8 CF       	    iret
 151              	
 152              	#void asm_inthandler27(void)
 153              	asm_inthandler27:
 154 00a9 06       	    push %es
 155 00aa 1E       	    push %ds
 156 00ab 60       	    pusha
 157 00ac 89E0     	    mov %esp, %eax
 158 00ae 50       	    push %eax
 159 00af 668CD0   	    mov %ss, %ax
 160 00b2 8ED8     	    mov %ax, %ds
 161 00b4 8EC0     	    mov %ax, %es
GAS LISTING src/asm/asm_func.s 			page 4


 162 00b6 E8FCFFFF 	    call inthandler27
 162      FF
 163 00bb 58       	    pop %eax
 164 00bc 61       	    popa
 165 00bd 1F       	    pop %ds
 166 00be 07       	    pop %es
 167 00bf CF       	    iret
 168              	
 169              	#unsigned int memtest_sub(unsigned int start, unsigned int end)
 170              	memtest_sub:
 171 00c0 57       	    push %edi #EDI, ESI, EBX„ÇÇ‰Ωø„ÅÜ
 172 00c1 56       	    push %esi
 173 00c2 53       	    push %ebx
 174 00c3 BE55AA55 	    movl $0xaa55aa55, %esi # pat0 = 0xaa55aa55
 174      AA
 175 00c8 BFAA55AA 	    movl $0x55aa55aa, %edi # pat1 = 0x55aa55aa
 175      55
 176 00cd 8B442410 	    movl 12+4(%esp), %eax  # i = start
 177              	mts_loop:
 178 00d1 89C3     	    movl %eax, %ebx
 179 00d3 81C3FC0F 	    addl $0xffc, %ebx # p = i + 0xffc  //‰∏ã‰Ωç4byte„Çí„ÉÅ„Çß„ÉÉ„ÇØ„Åô„Çã
 179      0000
 180 00d9 8B13     	    movl (%ebx), %edx # old = *p
 181 00db 8933     	    movl %esi, (%ebx) # *p = pat0
 182 00dd 8333FF   	    xorl $0xffffffff, (%ebx) # *p ^= 0xffffffff
 183 00e0 3B3B     	    cmpl (%ebx), %edi # if(*p == pat1) goto mts_fin
 184 00e2 7518     	    jne mts_fin
 185 00e4 8333FF   	    xorl  $0xffffffff, (%ebx) # *p ^= 0xfffffff
 186 00e7 3B33     	    cmpl (%ebx), %esi # if(*p == pat1) goto mts_fin
 187 00e9 7511     	    jne mts_fin
 188 00eb 8913     	    movl %edx, (%ebx)
 189 00ed 05001000 	    addl $0x1000, %eax # i += 0x1000 (4KBÈÄ≤„ÇÅ„Çã)
 189      00
 190 00f2 3B442414 	    cmpl 12+8(%esp), %eax # if (i <= end) goto mts_loop
 191 00f6 76D9     	    jbe mts_loop
 192 00f8 5B       	    pop %ebx
 193 00f9 5E       	    pop %esi
 194 00fa 5F       	    pop %edi
 195 00fb C3       	    ret
 196              	mts_fin:
 197 00fc 8913     	    movl %edx, (%ebx) #*p = old
 198 00fe 5B       	    pop %ebx
 199 00ff 5E       	    pop %esi
 200 0100 5F       	    pop %edi
 201 0101 C3       	    ret
 202              	
GAS LISTING src/asm/asm_func.s 			page 5


DEFINED SYMBOLS
  src/asm/asm_func.s:17     .text:0000000000000000 io_hlt
  src/asm/asm_func.s:22     .text:0000000000000002 io_cli
  src/asm/asm_func.s:27     .text:0000000000000004 io_sti
  src/asm/asm_func.s:32     .text:0000000000000006 io_stihlt
  src/asm/asm_func.s:38     .text:0000000000000009 io_in8
  src/asm/asm_func.s:45     .text:0000000000000014 io_in16
  src/asm/asm_func.s:52     .text:0000000000000020 io_in32
  src/asm/asm_func.s:58     .text:0000000000000026 io_out8
  src/asm/asm_func.s:65     .text:0000000000000030 io_out16
  src/asm/asm_func.s:72     .text:000000000000003b io_out32
  src/asm/asm_func.s:79     .text:0000000000000045 io_load_eflags
  src/asm/asm_func.s:85     .text:0000000000000048 io_store_eflags
  src/asm/asm_func.s:92     .text:000000000000004f load_gdtr
  src/asm/asm_func.s:99     .text:000000000000005f load_idtr
  src/asm/asm_func.s:106    .text:000000000000006f load_cr0
  src/asm/asm_func.s:111    .text:0000000000000073 store_cr0
  src/asm/asm_func.s:118    .text:000000000000007b asm_inthandler21
  src/asm/asm_func.s:136    .text:0000000000000092 asm_inthandler2c
  src/asm/asm_func.s:153    .text:00000000000000a9 asm_inthandler27
  src/asm/asm_func.s:170    .text:00000000000000c0 memtest_sub
  src/asm/asm_func.s:177    .text:00000000000000d1 mts_loop
  src/asm/asm_func.s:196    .text:00000000000000fc mts_fin

UNDEFINED SYMBOLS
inthandler21
inthandler2c
inthandler27
