     1                                  ; nasmfunc.asm
     2                                  ; TAB=4
     3                                  
     4                                  section .text
     5                                          GLOBAL  io_hlt, io_cli, io_sti, io_stihlt
     6                                          global  io_in8, io_in16, io_in32
     7                                          global  io_out8, io_out16, io_out32
     8                                          global  io_load_eflags, io_store_eflags
     9                                  		global	load_gdtr, load_idtr
    10                                  
    11                                  io_hlt:             ; void io_hlt(void);
    12 00000000 F4                              HLT
    13 00000001 C3                              RET
    14                                  
    15                                  io_cli:     ; void io_cli(void);
    16 00000002 FA                              cli
    17 00000003 C3                              ret
    18                                  
    19                                  io_sti:     ; void io_sti(void);
    20 00000004 FB                              sti
    21 00000005 C3                              ret
    22                                  
    23                                  io_stihlt:      ; void io_stihlt(void);
    24 00000006 FB                              sti
    25 00000007 F4                              hlt
    26 00000008 C3                              ret
    27                                  
    28                                  io_in8:     ; int io_in8(int port);
    29 00000009 8B542404                        mov     edx, [esp + 4]      ; port
    30 0000000D B800000000                      mov     eax, 0
    31 00000012 EC                              in      al, dx              ; 8
    32 00000013 C3                              ret
    33                                  
    34                                  io_in16:        ; int io_in16(int port);
    35 00000014 8B542404                        mov     edx, [esp + 4]      ; port
    36 00000018 B800000000                      mov     eax, 0
    37 0000001D 66ED                            in      ax, dx              ; 16
    38 0000001F C3                              ret
    39                                  
    40                                  in_in32:        ; int io_in16(int port);
    41 00000020 8B542404                        mov     edx, [esp + 4]      ; port
    42 00000024 ED                              in      eax, dx             ; 32
    43 00000025 C3                              ret
    44                                  
    45                                  io_out8:        ; void io_to_in_out8;
    46 00000026 8B542404                        mov     edx, [esp + 4]      ; port
    47 0000002A 8A442408                        mov     al, [esp + 8]       ; data
    48 0000002E EE                              out     dx, al              ; 8
    49 0000002F C3                              ret
    50                                  
    51                                  io_out16:       ; void io_to_in_out16;
    52 00000030 8B542404                        mov     edx, [esp + 4]      ; port
    53 00000034 8B442408                        mov     eax, [esp + 8]      ; data
    54 00000038 66EF                            out     dx, ax              ; 16
    55 0000003A C3                              ret
    56                                  
    57                                  io_out32:       ; void io_to_in_out32;
    58 0000003B 8B542404                        mov     edx, [esp + 4]      ; port
    59 0000003F 8B442408                        mov     eax, [esp + 8]      ; data
    60 00000043 EF                              out     dx, eax             ; 32
    61 00000044 C3                              ret
    62                                  
    63                                  io_load_eflags:     ; int io_load_eflags(void);
    64 00000045 9C                              pushfd      ; push eflags double-word
    65 00000046 58                              pop     eax
    66 00000047 C3                              ret
    67                                  
    68                                  io_store_eflags:        ; void io_store_eflags(int eflags);
    69 00000048 8B442404                        mov     eax, [esp + 4]
    70 0000004C 50                              push    eax
    71 0000004D 9D                              popfd       ; pup eflags double-word
    72 0000004E C3                              ret
    73                                  
    74                                  load_gdtr:		; void load_gdtr(int limit, int addr)
    75 0000004F 668B442404              		mov		ax, [esp + 4]		; limit
    76 00000054 6689442406              		mov 	[esp + 6], ax
    77 00000059 0F01542406              		lgdt	[esp + 6]
    78 0000005E C3                      		ret
    79                                  
    80                                  load_idtr:		; void load_idtr(int limit, int addr)
    81 0000005F 668B442404              		mov		ax, [esp + 4]		; limit
    82 00000064 6689442406              		mov 	[esp + 6], ax
    83 00000069 0F015C2406              		lidt	[esp + 6]
    84 0000006E C3                      		ret
    85                                  
    86                                  
